$date
	Fri Apr 18 12:15:26 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module test_8bitadder $end
$var wire 8 ! sum [7:0] $end
$var wire 1 " cout $end
$var reg 8 # a [7:0] $end
$var reg 8 $ b [7:0] $end
$scope module dusra $end
$var wire 8 % a [7:0] $end
$var wire 8 & b [7:0] $end
$var wire 8 ' sum [7:0] $end
$var wire 1 " cout $end
$var wire 9 ( c [8:0] $end
$scope begin genblk1[0] $end
$scope module adders $end
$var wire 1 ) a $end
$var wire 1 * b $end
$var wire 1 + cin $end
$var wire 1 , cout $end
$var wire 1 - sum $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module adders $end
$var wire 1 . a $end
$var wire 1 / b $end
$var wire 1 0 cin $end
$var wire 1 1 cout $end
$var wire 1 2 sum $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module adders $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 5 cin $end
$var wire 1 6 cout $end
$var wire 1 7 sum $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module adders $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 : cin $end
$var wire 1 ; cout $end
$var wire 1 < sum $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module adders $end
$var wire 1 = a $end
$var wire 1 > b $end
$var wire 1 ? cin $end
$var wire 1 @ cout $end
$var wire 1 A sum $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module adders $end
$var wire 1 B a $end
$var wire 1 C b $end
$var wire 1 D cin $end
$var wire 1 E cout $end
$var wire 1 F sum $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$scope module adders $end
$var wire 1 G a $end
$var wire 1 H b $end
$var wire 1 I cin $end
$var wire 1 J cout $end
$var wire 1 K sum $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$scope module adders $end
$var wire 1 L a $end
$var wire 1 M b $end
$var wire 1 N cin $end
$var wire 1 O cout $end
$var wire 1 P sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
0"
b0 !
$end
#10000
12
17
1<
1A
1F
1K
b11111110 !
b11111110 '
1P
10
15
1:
1?
1D
1I
1N
1"
1,
11
16
1;
1@
1E
1J
b111111110 (
1O
1*
1/
14
19
1>
1C
1H
1M
1)
1.
13
18
1=
1B
1G
1L
b11111111 $
b11111111 &
b11111111 #
b11111111 %
#20000
02
00
b111111100 (
0,
1-
07
0A
b10101001 !
b10101001 '
0K
0)
03
0=
0G
b10101010 #
b10101010 %
#30000
0P
0N
b101111100 (
0J
b1101001 !
b1101001 '
1K
0*
0>
0H
1)
1=
b10101110 $
b10101110 &
b10111011 #
b10111011 %
#40000
12
10
05
0I
0P
1,
01
0E
0N
0-
1A
07
0<
b1110010 !
b1110010 '
1K
b100111010 (
0J
1*
0/
1>
0C
0.
13
08
0B
1G
b10011101 $
b10011101 &
b11010101 #
b11010101 %
#50000
