$date
	Mon Apr 21 18:06:21 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module test_8bitadder $end
$var wire 8 ! sum [7:0] $end
$var wire 1 " cout $end
$var reg 8 # a [7:0] $end
$var reg 8 $ b [7:0] $end
$var reg 1 % cin $end
$scope module dusra $end
$var wire 8 & a [7:0] $end
$var wire 8 ' b [7:0] $end
$var wire 1 % cin $end
$var wire 8 ( sum [7:0] $end
$var wire 1 " cout $end
$var wire 9 ) c [8:0] $end
$scope begin genblk1[0] $end
$scope module adders $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 , cin $end
$var wire 1 - cout $end
$var wire 1 . sum $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module adders $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 1 cin $end
$var wire 1 2 cout $end
$var wire 1 3 sum $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module adders $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 6 cin $end
$var wire 1 7 cout $end
$var wire 1 8 sum $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module adders $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 ; cin $end
$var wire 1 < cout $end
$var wire 1 = sum $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module adders $end
$var wire 1 > a $end
$var wire 1 ? b $end
$var wire 1 @ cin $end
$var wire 1 A cout $end
$var wire 1 B sum $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module adders $end
$var wire 1 C a $end
$var wire 1 D b $end
$var wire 1 E cin $end
$var wire 1 F cout $end
$var wire 1 G sum $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$scope module adders $end
$var wire 1 H a $end
$var wire 1 I b $end
$var wire 1 J cin $end
$var wire 1 K cout $end
$var wire 1 L sum $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$scope module adders $end
$var wire 1 M a $end
$var wire 1 N b $end
$var wire 1 O cin $end
$var wire 1 P cout $end
$var wire 1 Q sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
1.
0-
1,
0+
0*
b1 )
b1 (
b0 '
b0 &
1%
b0 $
b0 #
0"
b1 !
$end
#10000
13
18
1=
1B
1G
1L
1Q
11
16
1;
1@
1E
1J
1O
1"
1-
12
17
1<
1A
1F
1K
1P
b11111110 !
b11111110 (
0.
0,
1+
10
15
1:
1?
1D
1I
1N
1*
1/
14
19
1>
1C
1H
1M
b111111110 )
0%
b11111111 $
b11111111 '
b11111111 #
b11111111 &
#20000
08
0B
b10101010 !
b10101010 (
0L
1,
0*
04
0>
0H
b111111111 )
1%
b10101010 #
b10101010 &
#30000
03
0Q
01
0O
0-
0K
1L
b1101001 !
b1101001 (
1.
0,
0+
0?
0I
1*
1>
b101111100 )
0%
b10101110 $
b10101110 '
b10111011 #
b10111011 &
#40000
13
06
0J
0Q
11
02
0F
0O
1-
1B
08
0=
b1110011 !
b1110011 (
1L
0K
1,
1+
00
1?
0D
0/
14
09
0C
1H
b100111011 )
1%
b10011101 $
b10011101 '
b11010101 #
b11010101 &
#50000
